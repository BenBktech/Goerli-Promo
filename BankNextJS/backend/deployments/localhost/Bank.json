{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "etherDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "etherWithdrawed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalanceOfUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf932e2a5370af1491b897d93b8cef6446d05da53f2260b3769faf958ea683044",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "432421",
    "logsBloom": "0x
    "blockHash": "0x918cadadfa3c78ed99986daf6b75c797c93b09c1460872ff1f95ac037ad0ccd8",
    "transactionHash": "0xf932e2a5370af1491b897d93b8cef6446d05da53f2260b3769faf958ea683044",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "432421",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "82eb3bd431887ff04f2c92e79baad5d3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"etherDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"etherWithdrawed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceOfUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Benjamin \",\"kind\":\"dev\",\"methods\":{\"getBalanceOfUser()\":{\"returns\":{\"_0\":\"The amount of ethers the user has on the smart contract\"}},\"withdraw(uint256)\":{\"params\":{\"_amount\":\"The amount of ethers the user wants to withdraw\"}}},\"title\":\"A simple Bank contract which allows users to deposit and then, withdraw ethers\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit()\":{\"notice\":\"Allows a user to deposit ethers on the smart contract\"},\"getBalanceOfUser()\":{\"notice\":\"Allows to get the amount of ethers the user has on the smart contract \"},\"withdraw(uint256)\":{\"notice\":\"Allows the user to withdraw ethers from the smart contract \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Bank.sol\":\"Bank\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Bank.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n///@title A simple Bank contract which allows users to deposit and then, withdraw ethers\\n///@author Benjamin \\n\\ncontract Bank {\\n\\n    struct Account {\\n        uint balance;\\n        uint lastDeposit;\\n    }\\n\\n    mapping(address => Account) accounts;\\n\\n    event etherDeposited(address indexed account, uint amount);\\n    event etherWithdrawed(address indexed account, uint amount);\\n\\n    ///@notice Allows the user to withdraw ethers from the smart contract \\n    ///@param _amount The amount of ethers the user wants to withdraw\\n    function withdraw(uint _amount) external {\\n        require(accounts[msg.sender].balance >= _amount, \\\"Not enough funds\\\");\\n        accounts[msg.sender].balance -= _amount;\\n        (bool received, ) = msg.sender.call{value: _amount}(\\\"\\\");\\n        require(received, \\\"An error occured\\\");\\n        emit etherWithdrawed(msg.sender, _amount);\\n    }\\n\\n    ///@notice Allows a user to deposit ethers on the smart contract\\n    function deposit() external payable {\\n        require(msg.value > 0, \\\"Not enough funds deposited\\\");\\n        accounts[msg.sender].balance += msg.value;\\n        accounts[msg.sender].lastDeposit = block.timestamp;\\n        emit etherDeposited(msg.sender, msg.value);\\n    }\\n\\n    ///@notice Allows to get the amount of ethers the user has on the smart contract \\n    ///@return The amount of ethers the user has on the smart contract\\n    function getBalanceOfUser() external view returns(uint) {\\n        return accounts[msg.sender].balance;\\n    }\\n\\n}\",\"keccak256\":\"0xc1e03c0866a7c220bcd1b312519ae2bd777673a605c2c015e33fca496bbd3ea7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506106e5806100206000396000f3fe6080604052600436106100345760003560e01c80632e1a7d4d1461003957806379982de414610062578063d0e30db01461008d575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610426565b610097565b005b34801561006e57600080fd5b50610077610271565b6040516100849190610462565b60405180910390f35b6100956102ba565b005b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154101561011b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610112906104da565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461016c9190610529565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516101999061058e565b60006040518083038185875af1925050503d80600081146101d6576040519150601f19603f3d011682016040523d82523d6000602084013e6101db565b606091505b505090508061021f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610216906105ef565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f47ed555d8b6242a89fcdab94795dc91c98a0e46db88f4a2b2bda3371956fd0d0836040516102659190610462565b60405180910390a25050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600034116102fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f49061065b565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461034e919061067b565b92505081905550426000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff167f4de483450f36dd8489373cf9166b2260f09ae72422d836e12fd9565cec1cb91e346040516103e19190610462565b60405180910390a2565b600080fd5b6000819050919050565b610403816103f0565b811461040e57600080fd5b50565b600081359050610420816103fa565b92915050565b60006020828403121561043c5761043b6103eb565b5b600061044a84828501610411565b91505092915050565b61045c816103f0565b82525050565b60006020820190506104776000830184610453565b92915050565b600082825260208201905092915050565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b60006104c460108361047d565b91506104cf8261048e565b602082019050919050565b600060208201905081810360008301526104f3816104b7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610534826103f0565b915061053f836103f0565b9250828203905081811115610557576105566104fa565b5b92915050565b600081905092915050565b50565b600061057860008361055d565b915061058382610568565b600082019050919050565b60006105998261056b565b9150819050919050565b7f416e206572726f72206f63637572656400000000000000000000000000000000600082015250565b60006105d960108361047d565b91506105e4826105a3565b602082019050919050565b60006020820190508181036000830152610608816105cc565b9050919050565b7f4e6f7420656e6f7567682066756e6473206465706f7369746564000000000000600082015250565b6000610645601a8361047d565b91506106508261060f565b602082019050919050565b6000602082019050818103600083015261067481610638565b9050919050565b6000610686826103f0565b9150610691836103f0565b92508282019050808211156106a9576106a86104fa565b5b9291505056fea26469706673582212209f2422bc78bda1d926f7e9c16c97cca7a604c675d0db62e585bd83a1dc6dbeed64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100345760003560e01c80632e1a7d4d1461003957806379982de414610062578063d0e30db01461008d575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610426565b610097565b005b34801561006e57600080fd5b50610077610271565b6040516100849190610462565b60405180910390f35b6100956102ba565b005b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154101561011b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610112906104da565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461016c9190610529565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516101999061058e565b60006040518083038185875af1925050503d80600081146101d6576040519150601f19603f3d011682016040523d82523d6000602084013e6101db565b606091505b505090508061021f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610216906105ef565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f47ed555d8b6242a89fcdab94795dc91c98a0e46db88f4a2b2bda3371956fd0d0836040516102659190610462565b60405180910390a25050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600034116102fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f49061065b565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461034e919061067b565b92505081905550426000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff167f4de483450f36dd8489373cf9166b2260f09ae72422d836e12fd9565cec1cb91e346040516103e19190610462565b60405180910390a2565b600080fd5b6000819050919050565b610403816103f0565b811461040e57600080fd5b50565b600081359050610420816103fa565b92915050565b60006020828403121561043c5761043b6103eb565b5b600061044a84828501610411565b91505092915050565b61045c816103f0565b82525050565b60006020820190506104776000830184610453565b92915050565b600082825260208201905092915050565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b60006104c460108361047d565b91506104cf8261048e565b602082019050919050565b600060208201905081810360008301526104f3816104b7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610534826103f0565b915061053f836103f0565b9250828203905081811115610557576105566104fa565b5b92915050565b600081905092915050565b50565b600061057860008361055d565b915061058382610568565b600082019050919050565b60006105998261056b565b9150819050919050565b7f416e206572726f72206f63637572656400000000000000000000000000000000600082015250565b60006105d960108361047d565b91506105e4826105a3565b602082019050919050565b60006020820190508181036000830152610608816105cc565b9050919050565b7f4e6f7420656e6f7567682066756e6473206465706f7369746564000000000000600082015250565b6000610645601a8361047d565b91506106508261060f565b602082019050919050565b6000602082019050818103600083015261067481610638565b9050919050565b6000610686826103f0565b9150610691836103f0565b92508282019050808211156106a9576106a86104fa565b5b9291505056fea26469706673582212209f2422bc78bda1d926f7e9c16c97cca7a604c675d0db62e585bd83a1dc6dbeed64736f6c63430008110033",
  "devdoc": {
    "author": "Benjamin ",
    "kind": "dev",
    "methods": {
      "getBalanceOfUser()": {
        "returns": {
          "_0": "The amount of ethers the user has on the smart contract"
        }
      },
      "withdraw(uint256)": {
        "params": {
          "_amount": "The amount of ethers the user wants to withdraw"
        }
      }
    },
    "title": "A simple Bank contract which allows users to deposit and then, withdraw ethers",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deposit()": {
        "notice": "Allows a user to deposit ethers on the smart contract"
      },
      "getBalanceOfUser()": {
        "notice": "Allows to get the amount of ethers the user has on the smart contract "
      },
      "withdraw(uint256)": {
        "notice": "Allows the user to withdraw ethers from the smart contract "
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12,
        "contract": "contracts/Bank.sol:Bank",
        "label": "accounts",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(Account)7_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Account)7_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Bank.Account)",
        "numberOfBytes": "32",
        "value": "t_struct(Account)7_storage"
      },
      "t_struct(Account)7_storage": {
        "encoding": "inplace",
        "label": "struct Bank.Account",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/Bank.sol:Bank",
            "label": "balance",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 6,
            "contract": "contracts/Bank.sol:Bank",
            "label": "lastDeposit",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}